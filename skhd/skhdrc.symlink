#  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#                     be found at https://github.com/koekeishiya/skhd/issues/1
#
#                     A hotkey is written according to the following rules:
#
#                       hotkey       = <mode> '<' <action> | <action>
#
#                       mode         = 'name of mode' | <mode> ',' <mode>
#
#                       action       = <keysym> '[' <proc_map_lst> ']' | <keysym> '->' '[' <proc_map_lst> ']'
#                                      <keysym> ':' <command>          | <keysym> '->' ':' <command>
#                                      <keysym> ';' <mode>             | <keysym> '->' ';' <mode>
#
#                       keysym       = <mod> '-' <key> | <key>
#
#                       mod          = 'modifier keyword' | <mod> '+' <mod>
#
#                       key          = <literal> | <keycode>
#
#                       literal      = 'single letter or built-in keyword'
#
#      +                keycode      = 'apple keyboard kVK_<Key> values (0x3C)'
#
#                       proc_map_lst = * <proc_map>
#
#                       proc_map     = <string> ':' <command> | <string>     '~' |
#                                      '*'      ':' <command> | '*'          '~'
#
#                       string       = '"' 'sequence of characters' '"'
#
#                       command      = command is executed through '$SHELL -c' and
#                                      follows valid shell syntax. if the $SHELL environment
#                                      variable is not set, it will default to '/bin/bash'.
#                                      when bash is used, the ';' delimeter can be specified
#                                      to chain commands.
#
#                                      to allow a command to extend into multiple lines,
#                                      prepend '\' at the end of the previous line.
#
#                                      an EOL character signifies the end of the bind.
#
#                       ->           = keypress is not consumed by skhd
#
#                       *            = matches every application not specified in <proc_map_lst>
#
#                       ~            = application is unbound and keypress is forwarded per usual, when specified in a <proc_map>
#
#  NOTE(koekeishiya): A mode is declared according to the following rules:
#
#                       mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |
#                                   '::' <name> '@'               | '::' <name>
#
#                       name      = desired name for this mode,
#
#                       @         = capture keypresses regardless of being bound to an action
#
#                       command   = command is executed through '$SHELL -c' and
#                                   follows valid shell syntax. if the $SHELL environment
#                                   variable is not set, it will default to '/bin/bash'.
#                                   when bash is used, the ';' delimeter can be specified
#                                   to chain commands.
#
#                                   to allow a command to extend into multiple lines,
#                                   prepend '\' at the end of the previous line.
#
#                                   an EOL character signifies the end of the bind.


# Quick Launch
:: qlaunch @
lctrl + rctrl - p ; qlaunch

qlaunch < g : open /Applications/Google\ Chrome.app; skhd -k "escape"
qlaunch < d : open /Applications/Discord.app; skhd -k "escape"
qlaunch < m : open /Applications/Mail.app; skhd -k "escape"
qlaunch < q : open /Applications/qutebrowser.app; skhd -k "escape"
qlaunch < t : open /Applications/iTerm.app; skhd -k "escape"
qlaunch < p : open /Applications/PyCharm.app; skhd -k "escape"
qlaunch < s : open /Applications/Spotify.app; skhd -k "escape"

qlaunch < escape ; default

# Turn off screen
:: system @
# it's `
lctrl + ctrl - 0x32 ; system

system < space : pmset displaysleepnow; skhd -k "escape"
system < right : pmset sleepnow; skhd -k "escape"
system < escape ; default

# add an on_enter command to the default mode
# :: default : chunkc border::color 0xff775759
#
# defines a new mode 'test' with an on_enter command, that captures keypresses
# :: test @ : chunkc border::color 0xff24ccaa
#
# from 'default' mode, activate mode 'test'
# cmd - x ; test
#
# from 'test' mode, activate mode 'default'
# test < cmd - x ; default
#
# launch a new terminal instance when in either 'default' or 'test' mode
# default, test < cmd - return : open -na /Applications/Terminal.app

# application specific bindings
#
# cmd - n [
#     "kitty"       : echo "hello kitty"
#     *             : echo "hello everyone"
#     "qutebrowser" : echo "hello qutebrowser"
#     "terminal"    ~
#     "finder"      : false
# ]

# specify a file that should be included as an additional config-file.
# treated as an absolutepath if the filename begins with '/' otherwise
# the file is relative to the path of the config-file it was loaded from.
#
# .load "/Users/Koe/.config/partial_skhdrc"
# .load "partial_skhdrc"

# prevent skhd from monitoring events for specific applications.
#
# .blacklist [
#    "kitty"
#    "terminal"
#    "qutebrowser"
# ]

# Close window
lctrl + rctrl + cmd - w : chunkc tiling::window --close

# focus window
# lctrl + rctrl - h : chunkc tiling::window --focus west
# lctrl + rctrl - j : chunkc tiling::window --focus south
# lctrl + rctrl - k : chunkc tiling::window --focus north
# lctrl + rctrl - l : chunkc tiling::window --focus east

# cmd - j : chunkc tiling::window --focus prev
# cmd - k : chunkc tiling::window --focus next

# # equalize size of windows
# shift + alt - 0 : chunkc tiling::desktop --equalize

# # swap window
lctrl + rctrl + alt - h : chunkc tiling::window --swap west
lctrl + rctrl + alt - j : chunkc tiling::window --swap south
lctrl + rctrl + alt - k : chunkc tiling::window --swap north
lctrl + rctrl + alt - l : chunkc tiling::window --swap east

# move window
# shift + cmd - h : chunkc tiling::window --warp west
# shift + cmd - j : chunkc tiling::window --warp south
# shift + cmd - k : chunkc tiling::window --warp north
# shift + cmd - l : chunkc tiling::window --warp east

# make floating window fill screen
lctrl + rctrl + alt - up     : chunkc tiling::window --grid-layout 1:1:0:0:1:1

# make floating window fill left-half of screen
lctrl + rctrl + alt - left   : chunkc tiling::window --grid-layout 1:2:0:0:1:1

# make floating window fill right-half of screen
lctrl + rctrl + alt - right  : chunkc tiling::window --grid-layout 1:2:1:0:1:1

# Toggle tile/float of a window
lctrl + rctrl + alt - space : chunkc tiling::window --toggle float; 

# Make window float and center
lctrl + rctrl + alt - c : ~/.dotfiles/chunkwm/float.sh preset 4

# focus monitor
lctrl + rctrl + cmd - h  : chunkc tiling::monitor -f prev
lctrl + rctrl + cmd - l  : chunkc tiling::monitor -f next
lctrl + rctrl + cmd - 1  : chunkc tiling::monitor -f 1
lctrl + rctrl + cmd - 2  : chunkc tiling::monitor -f 2
lctrl + rctrl + cmd - 3  : chunkc tiling::monitor -f 3

# send window to monitor and follow focus
lctrl + rctrl + alt + cmd - h  : chunkc tiling::window --send-to-monitor prev; chunkc tiling::monitor -f 1
lctrl + rctrl + alt + cmd - l  : chunkc tiling::window --send-to-monitor next; chunkc tiling::monitor -f 2

# increase region size
lctrl + rctrl + alt - a : chunkc tiling::window --use-temporary-ratio 0.05 --adjust-window-edge west
lctrl + rctrl + alt - s : chunkc tiling::window --use-temporary-ratio 0.05 --adjust-window-edge south
lctrl + rctrl + alt - w : chunkc tiling::window --use-temporary-ratio 0.05 --adjust-window-edge north
lctrl + rctrl + alt - d : chunkc tiling::window --use-temporary-ratio 0.05 --adjust-window-edge east

# decrease region size
lctrl + rctrl + shift + alt - a : chunkc tiling::window --use-temporary-ratio -0.05 --adjust-window-edge west
lctrl + rctrl + shift + alt - s : chunkc tiling::window --use-temporary-ratio -0.05 --adjust-window-edge south
lctrl + rctrl + shift + alt - w : chunkc tiling::window --use-temporary-ratio -0.05 --adjust-window-edge north
lctrl + rctrl + shift + alt - d : chunkc tiling::window --use-temporary-ratio -0.05 --adjust-window-edge east

# # set insertion point for focused container
# ctrl + alt - f : chunkc tiling::window --use-insertion-point cancel
# ctrl + alt - h : chunkc tiling::window --use-insertion-point west
# ctrl + alt - j : chunkc tiling::window --use-insertion-point south
# ctrl + alt - k : chunkc tiling::window --use-insertion-point north
# ctrl + alt - l : chunkc tiling::window --use-insertion-point east

# rotate tree
# lctrl + rctrl + alt - ' : chunkc tiling::desktop --rotate 90

# # mirror tree y-axis
# alt - y : chunkc tiling::desktop --mirror vertical

# # mirror tree x-axis
# alt - x : chunkc tiling::desktop --mirror horizontal

# # toggle desktop offset
# alt - a : chunkc tiling::desktop --toggle offset

# # toggle window fullscreen
# alt - f : chunkc tiling::window --toggle fullscreen

# # toggle window native fullscreen
# shift + alt - f : chunkc tiling::window --toggle native-fullscreen

# # toggle window parent zoom
# alt - d : chunkc tiling::window --toggle parent

# # toggle window split type
# alt - e : chunkc tiling::window --toggle split

# # toggle window fade
# alt - q : chunkc tiling::window --toggle fade

# # float / unfloat window and center on screen
# alt - t : chunkc tiling::window --toggle float;\
#           chunkc tiling::window --grid-layout 4:4:1:1:2:2

# # toggle sticky
# alt - s : chunkc tiling::window --toggle sticky

# # toggle sticky, float and resize to picture-in-picture size
# alt - p : chunkc tiling::window --toggle sticky;\
#           chunkc tiling::window --grid-layout 5:5:4:0:1:1

# # float next window to be tiled
# shift + alt - t : chunkc set window_float_next 1

# # change layout of desktop
lctrl + rctrl + alt + cmd - z : chunkc tiling::desktop --layout bsp
lctrl + rctrl + alt + cmd - x : chunkc tiling::desktop --layout monocle
lctrl + rctrl + alt + cmd - c : chunkc tiling::desktop --layout float

# ctrl + alt - w : chunkc tiling::desktop --deserialize ~/.chunkwm_layouts/dev_1<Paste>
